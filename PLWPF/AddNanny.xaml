<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
     xmlns:dg="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.AddNanny"
        mc:Ignorable="d"
        Title="AddNanny" Height="750" Width="650" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="nannyViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Nanny}, CreateList=True}"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="295*"/>
            <ColumnDefinition Width="298*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="24*"/>
            <RowDefinition Height="71*"/>
            <RowDefinition Height="85*"/>
        </Grid.RowDefinitions>


        <Grid x:Name="grid1"  DataContext="{StaticResource nannyViewSource}" Margin="0,89,0,0.667" Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label VerticalAlignment="Center" Grid.Row="0" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="addres:"/>
            <TextBox x:Name="addresTextBox" Width="120" VerticalAlignment="Center" Text="{Binding addres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="0" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>


            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="age child max:"/>
            <TextBox x:Name="age_child_maxTextBox" Width="120" VerticalAlignment="Center" Text="{Binding age_child_max, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="age child min:"/>
            <TextBox x:Name="age_child_minTextBox" Width="120" VerticalAlignment="Center" Text="{Binding age_child_min, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>


            <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="birth Day:"/>
            <DatePicker x:Name="birthDayDatePicker" VerticalAlignment="Center" SelectedDate="{Binding birthDay, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="1" DisplayDateStart="1.1.1938"/>


            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="elevators:"/>
            <CheckBox x:Name="elevatorsCheckBox" VerticalAlignment="Center" Grid.Row="4" Margin="3" IsChecked="{Binding elevators, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>


            <Label VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="First Name:"/>
            <TextBox x:Name="firstNameTextBox" Width="120" VerticalAlignment="Center" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="6" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="floor:"/>
            <TextBox x:Name="floorTextBox" Width="120" VerticalAlignment="Center" Text="{Binding floor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="6" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="id:"/>
            <TextBox x:Name="idTextBox" Width="120" VerticalAlignment="Center" Text="{Binding id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>




            <Label VerticalAlignment="Center" Grid.Row="8" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Last Name:"/>
            <TextBox x:Name="lastNameTextBox" Width="120" VerticalAlignment="Center" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="8" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="9" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="max Childs:"/>
            <TextBox x:Name="maxChildsTextBox" Width="120" VerticalAlignment="Center" Text="{Binding maxChilds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="9" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="10" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="per hour able:"/>
            <CheckBox x:Name="per_hour_ableCheckBox" VerticalAlignment="Center" Grid.Row="10" Margin="3" IsChecked="{Binding per_hour_able, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>



            <Label VerticalAlignment="Center" Grid.Row="11" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Phone Number:"/>
            <TextBox x:Name="phoneNumberTextBox" Width="120" VerticalAlignment="Center" Text="{Binding PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="11" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="12" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="recommendation:"/>
            <TextBox x:Name="recommendationTextBox" Width="120" VerticalAlignment="Center" Text="{Binding recommendation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="12" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>



            <Label VerticalAlignment="Center" Grid.Row="13" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="salary Per Hour:"/>
            <TextBox x:Name="salaryPerHourTextBox" Width="120" VerticalAlignment="Center" Text="{Binding salaryPerHour, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="13" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"
                   IsEnabled="{Binding ElementName=per_hour_ableCheckBox,Path=IsChecked}"  
                     
                     />


            <Label VerticalAlignment="Center" Grid.Row="14" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="salary Per Month:"/>
            <TextBox x:Name="salaryPerMonthTextBox" Width="120" VerticalAlignment="Center" Text="{Binding salaryPerMonth, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="14" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>


            <Label VerticalAlignment="Center" Grid.Row="15" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="vacation kind:"/>
            <CheckBox x:Name="vacation_kindCheckBox" VerticalAlignment="Center" Grid.Row="15" Margin="3" IsChecked="{Binding vacation_kind, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>



            <Label VerticalAlignment="Center" Grid.Row="16" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="years of experience:"/>
            <TextBox x:Name="years_of_experienceTextBox" Width="120" VerticalAlignment="Center" Text="{Binding years_of_experience, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="16" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>






        </Grid>
        <Grid  Grid.Row="1" Grid.Column="1" Margin="0,0,0.333,-0.333" Grid.RowSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="54.341"/>
                <RowDefinition Height="6.993"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Label VerticalAlignment="Center" Grid.Row="0" Grid.ColumnSpan="6" Margin="59,4,59,3.333" HorizontalAlignment="Center" Content="Choose the days and the hours you need a nanny:" />

            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3,3.667,0,4.333" HorizontalAlignment="Left" Content="Sunday:"/>
            <CheckBox x:Name="sundayCheckBox" VerticalAlignment="Center" Grid.Row="1"  IsChecked="{Binding work[0].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Right" Grid.Column="1" Content=""/>
            <Label VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" Content="Start:" Margin="17.667,4.333,0.333,5"/>
            <dg:TimePicker x:Name="start1" VerticalAlignment="Center" Grid.Row="1" Margin="3.333,6.667,3,6.333" HorizontalAlignment="Center" Grid.Column="3" IsEnabled="{Binding ElementName=sundayCheckBox, Path=IsChecked}" />
            <Label VerticalAlignment="Center" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Right" Content="End:"/>
            <dg:TimePicker x:Name="end1" VerticalAlignment="Center" Grid.Row="1"  HorizontalAlignment="Center" Grid.Column="5" IsEnabled="{Binding ElementName=sundayCheckBox, Path=IsChecked}"/>

            <Label VerticalAlignment="Center" Grid.Row="2" Margin="3,3.667,0,3.667" HorizontalAlignment="Left" Content="Monday:"/>
            <Label VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" Margin="0,3.667,2.667,3.667" HorizontalAlignment="Right" Content="Start:"/>
            <Label VerticalAlignment="Center" Grid.Row="2" Grid.Column="4" Margin="0,3.667,2.667,3.667" HorizontalAlignment="Right" Content="End:"/>
            <CheckBox x:Name="mondayCheckBox" VerticalAlignment="Center" Grid.Row="2" Margin="3,8.667,0,8.667" IsChecked="{Binding work[1].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
            <dg:TimePicker x:Name="startMondayTime" VerticalAlignment="Center" Grid.Row="2" Margin="3.333,6.667,0,6.667" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=mondayCheckBox, Path=IsChecked}" />
            <dg:TimePicker x:Name="endMondayTime" VerticalAlignment="Center" Grid.Row="2" Margin="3.333,6.667,0,6.667" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=mondayCheckBox, Path=IsChecked}"/>


            <Label VerticalAlignment="Center" Grid.Row="3" Margin="3,3.333,0,4" HorizontalAlignment="Left" Content="Tuesday:"/>
            <Label VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" Margin="0,3.333,2.667,4" HorizontalAlignment="Right" Content="Start:"/>
            <Label VerticalAlignment="Center" Grid.Row="3" Grid.Column="4" Margin="0,3.333,2.667,4" HorizontalAlignment="Right" Content="End:"/>
            <CheckBox x:Name="tuesdayCheckBox" VerticalAlignment="Center" Grid.Row="3" Margin="3,9.333,0,9" IsChecked="{Binding work[2].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
            <dg:TimePicker x:Name="startTuesdayTime" VerticalAlignment="Center" Grid.Row="3" Margin="3.333,6.333,0,6" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=tuesdayCheckBox, Path=IsChecked}"/>
            <dg:TimePicker x:Name="endTuesdayTime" VerticalAlignment="Center" Grid.Row="3" Margin="3.333,6.333,0,6" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=tuesdayCheckBox, Path=IsChecked}"/>

            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3,4,0,3.333" HorizontalAlignment="Left" Content="Wednesday:"/>
            <Label VerticalAlignment="Center" Grid.Row="4" Grid.Column="2" Margin="0,4,2.667,3.333" HorizontalAlignment="Right" Content="Start:"/>
            <Label VerticalAlignment="Center" Grid.Row="4" Grid.Column="4" Margin="0,4,2.667,3.333" HorizontalAlignment="Right" Content="End:"/>
            <CheckBox x:Name="wednesdayCheckBox" VerticalAlignment="Center" Grid.Row="4" Margin="3,9,0,9.333" IsChecked="{Binding work[3].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
            <dg:TimePicker x:Name="startWednesdayTime" VerticalAlignment="Center" Grid.Row="4" Margin="3.333,6,0,6.333" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=wednesdayCheckBox, Path=IsChecked}" />
            <dg:TimePicker x:Name="endWednesdayTime" VerticalAlignment="Center" Grid.Row="4" Margin="3.333,6,0,6.333" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=wednesdayCheckBox, Path=IsChecked}"/>

            <Label VerticalAlignment="Center" Grid.Row="5" Margin="3,3.667,0,3.667" HorizontalAlignment="Left" Content="Thursday:"/>
            <Label VerticalAlignment="Center" Grid.Row="5" Grid.Column="2" Margin="0,3.667,2.667,3.667" HorizontalAlignment="Right" Content="Start:"/>
            <Label VerticalAlignment="Center" Grid.Row="5" Grid.Column="4" Margin="0,3.667,2.667,3.667" HorizontalAlignment="Right" Content="End:"/>
            <CheckBox x:Name="thursdayCheckBox" VerticalAlignment="Center" Grid.Row="5" Margin="3,8.667,0,8.667" IsChecked="{Binding work[4].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
            <dg:TimePicker x:Name="startThursdayTime" VerticalAlignment="Center" Grid.Row="5" Margin="3.333,6.667,0,6.667" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=thursdayCheckBox, Path=IsChecked}" />
            <dg:TimePicker x:Name="endThursdayTime" VerticalAlignment="Center" Grid.Row="5" Margin="3.333,6.667,0,6.667" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=thursdayCheckBox, Path=IsChecked}"/>


            <Label VerticalAlignment="Center" Grid.Row="6" Margin="3,17.333,0,11.008" HorizontalAlignment="Left" Content="Friday:"/>
            <Label VerticalAlignment="Center" Grid.Row="6" Grid.Column="2" Margin="0,17.333,2.667,11.008" HorizontalAlignment="Right" Content="Start:"/>
            <Label VerticalAlignment="Center" Grid.Row="6" Grid.Column="4" Margin="0,17.333,2.667,11.008" HorizontalAlignment="Right" Content="End:"/>
            <CheckBox x:Name="fridayCheckBox" VerticalAlignment="Center" Grid.Row="6" Margin="3,23.333,0,16.008" IsChecked="{Binding work[5].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
            <dg:TimePicker x:Name="startFridayTime" VerticalAlignment="Center" Grid.Row="6" Margin="3.333,20.333,0,13.008" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=fridayCheckBox, Path=IsChecked}" />
            <dg:TimePicker x:Name="endFridayTime" VerticalAlignment="Center" Grid.Row="6" Margin="3.333,20.333,0,13.008" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=fridayCheckBox, Path=IsChecked}"/>


        </Grid>
        <Button x:Name="add_nanny_button"  Content="add nanny"  Click="add_nanny_button_Click"  Grid.Row="2" Margin="50" Grid.Column="1">

            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=idTextBox, Path=Text}" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=lastNameTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=firstNameTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=addresTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=phoneNumberTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=birthDayDatePicker, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=floorTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=floorTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=age_child_maxTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=age_child_minTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=maxChildsTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>


                        <DataTrigger Binding="{Binding ElementName=salaryPerMonthTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=years_of_experienceTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>




                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>




    </Grid>
</Window>
