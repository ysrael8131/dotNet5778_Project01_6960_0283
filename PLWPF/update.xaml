<Window x:Class="PLWPF.update"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
              xmlns:dg="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="update" Height="1000" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="373*"/>
            <ColumnDefinition Width="421*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="894*"/>
        </Grid.RowDefinitions>
        <WrapPanel Grid.ColumnSpan="2" TextElement.FontSize="16" VerticalAlignment="Bottom" >

            <DockPanel Grid.Row="0" >
                <Label Content="select item" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" />
                <ComboBox x:Name="select_item_combobox" Margin="15" Width="100" SelectionChanged="select_item_combobox_SelectionChanged"/>
            </DockPanel>

            <StackPanel x:Name="nanny_stackpanel" Visibility="Collapsed" Orientation="Horizontal">
                <TextBlock x:Name="select_nannys" Text="select_nanny" Margin="15"/>
                <ComboBox x:Name="select_nanny_conbobox" Width="500" Margin="15" SelectionChanged="select_nanny_conbobox_SelectionChanged"/>
            </StackPanel>

            <StackPanel  x:Name="mother_stackpanel" Visibility="Collapsed" Orientation="Horizontal">
                <TextBlock x:Name="select_mother" Text="select_mother" Margin="15"/>
                <ComboBox x:Name="select_mother_conbobox" Width="500" Margin="15" SelectionChanged="select_mother_conbobox_SelectionChanged"/>
            </StackPanel>

            <StackPanel  x:Name="child_stackpanel" Visibility="Collapsed" Orientation="Horizontal">
                <TextBlock x:Name="select_child" Text="select_child" Margin="15"/>
                <ComboBox IsEnabled="{Binding ElementName=select_mother_conbobox, Path=SelectedItem}" x:Name="select_child_conbobox" Width="500" Margin="15" SelectionChanged="select_child_conbobox_SelectionChanged"/>
            </StackPanel>

            <!--IsEnabled="{Binding ElementName=select_mother_conbobox, Path=IsInitialized}"-->
        </WrapPanel>
        <Grid x:Name="first_grid_mother" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed" 
              Background="{StaticResource BackgroundGrid}"  Margin="15" >
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                
            </Grid.ColumnDefinitions>
                      <TextBlock Margin="10,10,9,9.2" VerticalAlignment="Center" Text="Personal Information" TextAlignment="Center" FontSize="20" />

            <TextBlock  Style="{StaticResource textblock_style}"  Text=" ID" Grid.Row="1" 
                Visibility="{Binding ElementName=idTextBox,
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox x:Name="idTextBox" Grid.Row="1" Style="{StaticResource textbox_style}" 
                   Text="{Binding id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" IsEnabled="False" />


            <TextBlock  Style="{StaticResource textblock_style}" Text=" First name" Grid.Row="2" 
                       Visibility="{Binding ElementName=firstNameTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}" x:Name="firstNameTextBox" Grid.Row="2"  
                     Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true,   
                ValidatesOnExceptions=true}"/>


            <TextBlock  Style="{StaticResource textblock_style}" Text=" Last name" Grid.Row="3"
                       Visibility="{Binding ElementName=lastNameTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}"  x:Name="lastNameTextBox" Grid.Row="3" 
                     Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, 
                ValidatesOnExceptions=true}" />






            <TextBlock  Style="{StaticResource textblock_style}" Text=" Addres" Grid.Row="4" 
                       Visibility="{Binding ElementName=addresTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}" x:Name="addresTextBox" Grid.Row="4" 
                    Text="{Binding Addres, Mode=TwoWay, NotifyOnValidationError=true, 
                ValidatesOnExceptions=true}" Height="25" />



            <TextBlock  Style="{StaticResource textblock_style}" Text=" Phone number" Grid.Row="5"
           Visibility="{Binding ElementName=phoneNumberTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}" x:Name="phoneNumberTextBox" Grid.Row="5"  
                    Text="{Binding PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />



            <Label Content="Elevators:"   HorizontalAlignment="Left" Margin="10" Grid.Row="6" VerticalAlignment="Center"/>
            <CheckBox x:Name="elevatorsCheckBox"   HorizontalAlignment="Center" IsChecked="{Binding elevators, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
            <Button Content="update" Grid.Row="7" Margin="20" Grid.ColumnSpan="2"  BorderBrush="{StaticResource brushWatermarkBorder}" >
                <Button.Style >
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=idTextBox, Path=Text}" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=lastNameTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=firstNameTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=addresTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=phoneNumberTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Grid x:Name="second_grid_mother" Grid.RowSpan="7" Grid.Column="1" ShowGridLines="False" Visibility="Visible"
              Background="{StaticResource BackgroundGrid}" Margin="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="0.5*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="10" Text="details for the nanny search" Grid.ColumnSpan="6" TextAlignment="Center" FontSize="20" />

                <Label VerticalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="6" Margin="3" HorizontalAlignment="Center" Content="Choose the days and the hours you need a nanny:" />

                <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Content="Sunday:"/>
                <CheckBox x:Name="sundayCheckBox" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" IsChecked="{Binding arr[0].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" />
                <Label VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" Margin="3" HorizontalAlignment="Right" Content="Start:"/>
                <dg:TimePicker x:Name="start1" VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Center" Grid.Column="3" IsEnabled="{Binding ElementName=sundayCheckBox, Path=IsChecked}" SizeChanged="SizeStart1" />



                <Label VerticalAlignment="Center" Grid.Row="2" Grid.Column="4" Margin="3" HorizontalAlignment="Right" Content="End:"/>
                <dg:TimePicker x:Name="end1" VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Center" Grid.Column="5" IsEnabled="{Binding ElementName=sundayCheckBox, Path=IsChecked}"/>

                <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Content="Monday:"/>
                <Label VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" Margin="3" HorizontalAlignment="Right" Content="Start:"/>
                <Label VerticalAlignment="Center" Grid.Row="3" Grid.Column="4" Margin="3" HorizontalAlignment="Right" Content="End:"/>
                <CheckBox x:Name="mondayCheckBox" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="3" IsChecked="{Binding arr[1].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1"/>
                <dg:TimePicker x:Name="startMondayTime" VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=mondayCheckBox, Path=IsChecked}" />
                <dg:TimePicker x:Name="endMondayTime" VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=mondayCheckBox, Path=IsChecked}"/>

                <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Content="Tuesday:"/>
                <Label VerticalAlignment="Center" Grid.Row="4" Grid.Column="2" Margin="3" HorizontalAlignment="Right" Content="Start:"/>
                <Label VerticalAlignment="Center" Grid.Row="4" Grid.Column="4" Margin="3" HorizontalAlignment="Right" Content="End:"/>
                <CheckBox x:Name="tuesdayCheckBox" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="4" IsChecked="{Binding arr[2].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Column="1" />
                <dg:TimePicker x:Name="startTuesdayTime" VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=tuesdayCheckBox, Path=IsChecked}"/>
                <dg:TimePicker x:Name="endTuesdayTime" VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=tuesdayCheckBox, Path=IsChecked}"/>

                <Label VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Content="Wednesday:"/>
                <Label VerticalAlignment="Center" Grid.Row="5" Grid.Column="2" Margin="3" HorizontalAlignment="Right" Content="Start:"/>
                <Label VerticalAlignment="Center" Grid.Row="5" Grid.Column="4" Margin="3" HorizontalAlignment="Right" Content="End:"/>
                <CheckBox x:Name="wednesdayCheckBox" VerticalAlignment="Center" Grid.Row="5" IsChecked="{Binding arr[3].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" Grid.Column="1"/>
                <dg:TimePicker x:Name="startWednesdayTime" VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=wednesdayCheckBox, Path=IsChecked}" />
                <dg:TimePicker x:Name="endWednesdayTime" VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=wednesdayCheckBox, Path=IsChecked}" />

                <Label VerticalAlignment="Center" Grid.Row="6" Margin="3" HorizontalAlignment="Left" Content="Thursday:"/>
                <Label VerticalAlignment="Center" Grid.Row="6" Grid.Column="2" Margin="3" HorizontalAlignment="Right" Content="Start:"/>
                <Label VerticalAlignment="Center" Grid.Row="6" Grid.Column="4" Margin="3" HorizontalAlignment="Right" Content="End:"/>
                <CheckBox x:Name="thursdayCheckBox" VerticalAlignment="Center" Grid.Row="6" IsChecked="{Binding arr[4].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" Grid.Column="1"/>
                <dg:TimePicker x:Name="startThursdayTime" VerticalAlignment="Center" Grid.Row="6" Margin="3" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=thursdayCheckBox, Path=IsChecked}" />
                <dg:TimePicker x:Name="endThursdayTime" VerticalAlignment="Center" Grid.Row="6" Margin="3" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=thursdayCheckBox, Path=IsChecked}"/>


                <Label VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Content="Friday:"/>
                <Label VerticalAlignment="Center" Grid.Row="7" Grid.Column="2" Margin="3" HorizontalAlignment="Right" Content="Start:"/>
                <Label VerticalAlignment="Center" Grid.Row="7" Grid.Column="4" Margin="3" HorizontalAlignment="Right" Content="End:"/>
                <CheckBox x:Name="fridayCheckBox" VerticalAlignment="Center" Grid.Row="7" IsChecked="{Binding arr[5].day_work, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Center" Grid.Column="1" />
                <dg:TimePicker x:Name="startFridayTime" VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="3" IsEnabled="{Binding ElementName=fridayCheckBox, Path=IsChecked}" />
                <dg:TimePicker x:Name="endFridayTime" VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="5" IsEnabled="{Binding ElementName=fridayCheckBox, Path=IsChecked}"/>

                <TextBlock  Style="{StaticResource textblock_style}" Text=" search addres" Grid.Row="9" Grid.ColumnSpan="6"
                       Visibility="{Binding ElementName=searchAddresTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <TextBox Style="{StaticResource textbox_style}" x:Name="searchAddresTextBox" Grid.Row="9" Grid.ColumnSpan="6"
                    Text="{Binding SearchAddres, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
             


                <TextBlock x:Name="errorMessegHours" HorizontalAlignment="Left" Margin="5,9.667,0,0" Grid.Row="8" Grid.RowSpan="2" TextWrapping="Wrap" Text="No start/end time has been set" VerticalAlignment="Top" Foreground="Red" Visibility="Collapsed" Grid.ColumnSpan="8"/>
                <TextBlock x:Name="errorMessegTime" HorizontalAlignment="Left" Margin="5,9.667,0,0" Grid.Row="8" Grid.RowSpan="2" TextWrapping="Wrap" Text="End time can not be earlier than start time" VerticalAlignment="Top" Foreground="Red" Visibility="Collapsed" Grid.ColumnSpan="8"/>


            </Grid>

        </Grid>
        <Grid x:Name="child_grid" Background="{StaticResource BackgroundGrid}" Margin="15" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Margin="10,10,9,9.2"  Text="Personal Information" TextAlignment="Center" FontSize="20" />

            <TextBlock    Text=" ID" Grid.Row="1" Style="{StaticResource textblock_style}"
         Visibility="{Binding ElementName=idTextBox,Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox x:Name="cidTextBox" IsEnabled="False" Grid.Row="1" Margin="10" Style="{StaticResource textbox_style}" 
         Text="{Binding id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" TextChanged="textChange" />
            <TextBlock x:Name="errorMesseg1" Text=" This field is for numbers only" Grid.Row="1" Style="{StaticResource textblock_style_error}" />
            <TextBlock x:Name="errorMesseg2" Text="Number ID should be 9 digits" Grid.Row="1" Style="{StaticResource textblock_style_error}"/>
            <TextBlock x:Name="errorMesseg3" Text="Number ID can not be negative" Grid.Row="1" Style="{StaticResource textblock_style_error}"/>


            <TextBlock    Text="Mother ID" Grid.Row="2" Style="{StaticResource textblock_style}"
         Visibility="{Binding ElementName=idTextBoxMother,Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox x:Name="idTextBoxMother" IsEnabled="False" Grid.Row="2" Style="{StaticResource textbox_style}" 
         Text="{Binding MotherID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10" TextChanged="textChange1"   />

            <TextBlock x:Name="errorMesseg4" Text=" This field is for numbers only" Grid.Row="2" Style="{StaticResource textblock_style_error}" />
            <TextBlock x:Name="errorMesseg5" Text="Number ID should be 9 digits" Grid.Row="2" Style="{StaticResource textblock_style_error}"/>
            <TextBlock x:Name="errorMesseg6" Text="Number ID can not be negative" Grid.Row="2" Style="{StaticResource textblock_style_error}"/>

            <TextBlock    Text="First Name" Grid.Row="4" Style="{StaticResource textblock_style}"
                     Visibility="{Binding ElementName=firstNameTextBox,Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox x:Name="cfirstNameTextBox" Grid.Row="4" Style="{StaticResource textbox_style}" 
                 Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="10" TextChanged="textChnge2" />

            <TextBlock x:Name="errorMesseg7" Text="This field can contain letters only" Grid.Row="4" Style="{StaticResource textblock_style_error}" />

            <TextBlock    Text="Birth day" Grid.Row="3" Style="{StaticResource textblock_style}"
                 Visibility="{Binding ElementName=birthDayDatePicker,Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <DatePicker x:Name="birthDayDatePicker"  Grid.Row="3" Background="Transparent"
                    SelectedDate="{Binding birthDay, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    VerticalAlignment="Center" DisplayDateStart="01.01.2012" BorderBrush="{StaticResource brushWatermarkBorder}" Margin="15"  />

            <Label Content="Special Needs:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
            <CheckBox x:Name="specialNeedsCheckBox" Content="" Grid.Column="0" IsChecked="{Binding specialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                 HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Center"/>


            <TextBlock    Text="details Special Needs:" Grid.Row="6" Style="{StaticResource textblock_style}"
         Visibility="{Binding ElementName=detailsSpecialNeedsTextBox,Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox x:Name="detailsSpecialNeedsTextBox" Grid.Row="6" Style="{StaticResource textbox_style}" 
         Text="{Binding detailsSpecialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                 IsEnabled="{Binding ElementName=specialNeedsCheckBox,Path=IsChecked}" Margin="10" />
            <Button Content="update child"  Grid.Row="7" Margin="20"   BorderBrush="{StaticResource brushWatermarkBorder}" >
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=idTextBox,Path=Text}" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=firstNameTextBox,Path=Text}" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=birthDayDatePicker,Path=Text}" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=idTextBoxMother,Path=Text}" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

            </Button>

            <!--<Grid.RowDefinitions>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Button Content="ADD CHILD" Grid.Row="1"  HorizontalContentAlignment="Center"
          IsEnabled="{Binding ElementName=idTextBox, Path=Text}" Click="Button_Click"
               >

        </Button>
        <Grid x:Name="grid1" DataContext="{StaticResource childViewSource}" HorizontalAlignment="Left" Margin="10,20,0,0" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="birth Day:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
            <DatePicker x:Name="birthDayDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="3"
                        SelectedDate="{Binding birthDay, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                        VerticalAlignment="Center" DisplayDateStart="01.01.2012" />


            <Label Content="details Special Needs:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
            <TextBox x:Name="detailsSpecialNeedsTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="5" Text="{Binding detailsSpecialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>


            <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
            <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>



            <Label Content="id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
            <TextBox x:Name="idTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120"/>



            <Label Content="Mother ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
            <TextBox x:Name="motherIDTextBox" Grid.Column="1" Height="24" Margin="3.333,4,2.667,4" Grid.Row="1" Text="{Binding MotherID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>



            <Label Content="special Needs:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
            <CheckBox x:Name="specialNeedsCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding specialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
        </Grid>-->
        </Grid>

        <Grid Visibility="Collapsed"  x:Name="first_grid_nanny" Margin="15" Background="{StaticResource BackgroundGrid}" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>

            </Grid.RowDefinitions>

            <TextBlock  Margin="10,10,9,9.2" VerticalAlignment="Center" Text="Personal Information" TextAlignment="Center" FontSize="20" />
            <TextBlock Style="{StaticResource textblock_style}" Grid.Row="1"  Text=" ID"
                        Visibility="{Binding ElementName=idTextBox,
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox x:Name="nidTextBox" Text="{Binding id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1"
                     Style="{StaticResource textbox_style}"/>

            <TextBlock Style="{StaticResource textblock_style}" Grid.Row="2"  Text=" First name"
                        Visibility="{Binding ElementName=firstNameTextBox,
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <TextBox x:Name="nfirstNameTextBox" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2"
                     Style="{StaticResource textbox_style}"/>

            <TextBlock  Style="{StaticResource textblock_style}" Text=" Last name" Grid.Row="3"
                       Visibility="{Binding ElementName=lastNameTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}"  x:Name="nlastNameTextBox" Grid.Row="3" 
                     Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, 
                ValidatesOnExceptions=true}" />

            <TextBlock  Style="{StaticResource textblock_style}" Text=" Addres" Grid.Row="4" 
                       Visibility="{Binding ElementName=addresTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}" x:Name="naddresTextBox" Grid.Row="4" 
                    Text="{Binding Addres, Mode=TwoWay, NotifyOnValidationError=true, 
                ValidatesOnExceptions=true}" Height="25" />


            <TextBlock  Style="{StaticResource textblock_style}" Text=" Phone number" Grid.Row="5"
           Visibility="{Binding ElementName=phoneNumberTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBox Style="{StaticResource textbox_style}" x:Name="nphoneNumberTextBox" Grid.Row="5"  
                    Text="{Binding PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />

            <Grid Grid.Row="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1.5*"/>
                </Grid.ColumnDefinitions>
                <TextBlock  Style="{StaticResource textblock_style}" Text=" Floor" Grid.Column="0"
           Visibility="{Binding ElementName=floorTextBox,  
                Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"
                        HorizontalAlignment="Left" Width="50" />
                <TextBox Style="{StaticResource textbox_style}" x:Name="floorTextBox" Width="50" VerticalAlignment="Center" 
                     Text="{Binding floor, Mode=TwoWay, NotifyOnValidationError=true, 
                ValidatesOnExceptions=true}" Grid.Column="0" Margin="10" HorizontalAlignment="Left" />

                <Label Content="Elevators:"   HorizontalAlignment="Left" Margin="10" Grid.Column="1" 
                       VerticalAlignment="Center"/>
                <CheckBox x:Name="nelevatorsCheckBox"   HorizontalAlignment="Center" 
                          IsChecked="{Binding elevators, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                          Margin="3" Grid.Column="1" VerticalAlignment="Center"/>
            </Grid>
            <Label Content="Birth day:"   HorizontalAlignment="Left" Margin="10" Grid.Row="7" 
                       VerticalAlignment="Center"/>
            <DatePicker x:Name="nbirthDayDatePicker" VerticalAlignment="Center" SelectedDate="{Binding birthDay, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Margin="15" HorizontalAlignment="Center"/>

            <Button Content="Next" Grid.Row="8" Margin="20"   BorderBrush="{StaticResource brushWatermarkBorder}" Click="Button_Click_Next" >
                <Button.Style >
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=idTextBox, Path=Text}" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=lastNameTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=firstNameTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=addresTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=phoneNumberTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=floorTextBox, Path=Text  }" Value="">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>


    </Grid>
</Window>
